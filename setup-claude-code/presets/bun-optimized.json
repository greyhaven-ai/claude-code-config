{
  "name": "Bun Optimized",
  "description": "JavaScript/TypeScript development optimized for Bun runtime",
  "hooks": {
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/bash/branch-context-loader.sh",
            "timeout": 10
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "bun $CLAUDE_PROJECT_DIR/.claude/hooks/js/prompt-enhancer.js",
            "timeout": 10
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "bun $CLAUDE_PROJECT_DIR/.claude/hooks/js/subagent-context-preparer.js",
            "timeout": 10
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/bash/code-linter.sh",
            "timeout": 30
          },
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/bash/auto-formatter.sh",
            "timeout": 20
          },
          {
            "type": "command",
            "command": "bun $CLAUDE_PROJECT_DIR/.claude/hooks/js/incremental-type-checker.js",
            "timeout": 30
          },
          {
            "type": "command",
            "command": "bun $CLAUDE_PROJECT_DIR/.claude/hooks/js/test-runner.js",
            "timeout": 30
          }
        ]
      },
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "bun $CLAUDE_PROJECT_DIR/.claude/hooks/js/subagent-work-validator.js",
            "timeout": 10
          }
        ]
      }
    ]
  },
  "agents": [
    "tdd-typescript",
    "react-tanstack-tester"
  ],
  "commands": [
    "/tdd-implement",
    "/quality-pipeline"
  ],
  "statusLine": {
    "type": "command",
    "command": "bash -c 'input=$(cat); MODEL=$(echo \"$input\" | jq -r \".model.display_name\"); echo \"üçû [$MODEL] Bun Development\"'",
    "padding": 0
  }
}